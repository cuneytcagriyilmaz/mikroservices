spring.application.name=library-service
spring.h2.console.path=/h2-console
spring.h2.console.enabled=true
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:testdb

spring.datasource.username=sa
spring.datasource.password=123456

spring.jpa.show-sql=true
spring.jpa.database=h2
spring.jpa.hibernate.ddl-auto=create-drop

eureka.instance.prefer-ip-address=true
eureka.client.service-url.default-zone=${EUREKA_URI:http://localhost:8761/eureka}


#server.port = 8080
server.port = 0
eureka.instance.instance-id=${spring.application.name}:${random.value}

spring.zipkin.base-url:http://localhost:9411/zipkin/

#Cloud Config'in dosyalarinin nerede olduguni belirliyoriz.
#optinal ile birlikte uygulamanin cokmesi engelleniyor. Resiliance mantigi. Eger config'i bulamazsa library service calismaya devam eder.
#En sonuna / koymazsak hata verir.
spring.cloud.config.uri=optional:configserver:http://localhost:5888/
spring.config.import=optional:configserver:http://localhost:5888/
spring.profiles.active=dev

#Yukaridaki url'de uygulama adi kullanilir. en sona da profil gelir.Asagidaki gibi olur
#http://localhost:5888/library-service/default

